CREATE TABLE IF NOT EXISTS public.submit (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  title text NOT NULL,
  description text NOT NULL,
  url text NOT NULL,
  redbook_url text NOT NULL,
  creator_name text NOT NULL,
  creator_redbook_id text NOT NULL,
  category text NOT NULL DEFAULT 'web',
  tags text[] DEFAULT '{}',
  screenshot_urls text[] DEFAULT '{}',
  status text NOT NULL DEFAULT 'pending',
  CONSTRAINT submit_pkey PRIMARY KEY (id),
  CONSTRAINT submit_status_check CHECK (status IN ('pending', 'approved', 'rejected'))
) TABLESPACE pg_default;

-- 查询submit表，按提交时间，status=0（未处理），按照is_feature desc, created_at asc
-- 得到结果后，写入web_navigation，同时修改submit的status=1

create table if not exists public.navigation_category (
    id bigint primary key generated always as identity,
    name text not null,
    title text,
    sort integer,
    del_flag integer default 0, -- 默认值可以设为0，但COMMENT要单独写
    create_by bigint default 0, -- 默认值可以设为0，但COMMENT要单独写
    create_time timestamp with time zone not null default now()
  ) TABLESPACE pg_default;

-- 添加注释
comment on column public.navigation_category.del_flag is '是否删除 0:未删除 1:删除';
comment on column public.navigation_category.create_by is '创建者';


CREATE TABLE IF NOT EXISTS public.web_navigation (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name TEXT PRIMARY KEY,
  title TEXT,
  content TEXT,
  detail TEXT,
  url TEXT,
  image_url TEXT,
  thumbnail_url TEXT,
  website_data TEXT,
  collection_time TIMESTAMPTZ,
  star_rating INTEGER,
  tag_name TEXT,
  category_name TEXT
) TABLESPACE pg_default;

-- 创建小红书独立开发者项目表
CREATE TABLE IF NOT EXISTS redbook_projects (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    website_url VARCHAR(255) NOT NULL,
    redbook_url VARCHAR(255) NOT NULL,
    creator_name VARCHAR(100) NOT NULL,
    creator_redbook_id VARCHAR(100) NOT NULL,
    status VARCHAR(20) DEFAULT 'pending' CHECK (status IN ('pending', 'approved', 'rejected')),
    category VARCHAR(50) NOT NULL,
    tags TEXT[] DEFAULT '{}',
    screenshot_urls TEXT[] DEFAULT '{}',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc', NOW()),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc', NOW())
);

-- 创建更新时间触发器
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc', NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_redbook_projects_updated_at
    BEFORE UPDATE ON redbook_projects
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 添加索引
CREATE INDEX IF NOT EXISTS idx_redbook_projects_status ON redbook_projects(status);
CREATE INDEX IF NOT EXISTS idx_redbook_projects_category ON redbook_projects(category);
CREATE INDEX IF NOT EXISTS idx_redbook_projects_created_at ON redbook_projects(created_at);

-- 添加索引
CREATE INDEX IF NOT EXISTS idx_submit_status ON submit(status);
CREATE INDEX IF NOT EXISTS idx_submit_category ON submit(category);
CREATE INDEX IF NOT EXISTS idx_submit_created_at ON submit(created_at);

-- 创建用户配置表
CREATE TABLE IF NOT EXISTS public.profiles (
    id UUID REFERENCES auth.users(id) PRIMARY KEY,
    role TEXT NOT NULL DEFAULT 'user' CHECK (role IN ('user', 'admin')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc', NOW()),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc', NOW())
);

-- 创建更新时间触发器
CREATE TRIGGER update_profiles_updated_at
    BEFORE UPDATE ON profiles
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- 添加索引
CREATE INDEX IF NOT EXISTS idx_profiles_role ON profiles(role);

